const minify=require("terser")["minify"],fs=require("fs/promises"),path=require("path"),glob=require("glob-promise"),THEME_ROOT=path.join(__dirname,"../.."),SOURCE_DIR=path.join(THEME_ROOT,"source/js"),BUILD_DIR=path.join(THEME_ROOT,"source/js/build"),IGNORE_PATTERNS=[path.join(SOURCE_DIR,"libs/**"),path.join(BUILD_DIR,"**"),path.join(SOURCE_DIR,"build.js")],minifyOptions={compress:{dead_code:!0,drop_console:!1,drop_debugger:!0,keep_classnames:!0,keep_fnames:!0},mangle:{keep_classnames:!0,keep_fnames:!0},format:{comments:!1},module:!0,sourceMap:{filename:"source-map",url:"source-map.map"}};async function ensureDirectoryExists(o){try{await fs.mkdir(o,{recursive:!0})}catch(e){if("EEXIST"!==e.code)throw new Error(`Failed to create directory ${o}: `+e.message)}}async function copyFile(o,e){try{await ensureDirectoryExists(path.dirname(e)),await fs.copyFile(o,e),console.log(`✓ Copied ${o} -> `+e)}catch(e){throw console.error(`× Error copying ${o}:`,e),e}}async function processFile(o){try{var e=await fs.readFile(o,"utf8"),i=path.relative(SOURCE_DIR,o),r=path.join(BUILD_DIR,i),s=path.dirname(r),a={...minifyOptions,sourceMap:{...minifyOptions.sourceMap,filename:path.basename(o),url:path.basename(o)+".map"}},t=await minify(e,a);await ensureDirectoryExists(s),await fs.writeFile(r,t.code),t.map&&await fs.writeFile(r+".map",t.map),console.log(`✓ Minified ${o} -> `+r)}catch(e){throw console.error(`× Error processing ${o}:`,e),e}}async function minifyJS(){try{await ensureDirectoryExists(BUILD_DIR);var e=await glob(SOURCE_DIR+"/libs/**/*.js"),o=await glob(SOURCE_DIR+"/**/*.js",{ignore:IGNORE_PATTERNS});if(0===o.length&&0===e.length)console.log("No JavaScript files found to process");else{console.log(`Found ${o.length} files to minify and ${e.length} lib files to copy...`);for(const a of e){var i=path.relative(SOURCE_DIR,a),r=path.join(BUILD_DIR,i);await copyFile(a,r)}var s=[];for(let e=0;e<o.length;e+=4)s.push(o.slice(e,e+4));for(const t of s)await Promise.all(t.map(processFile));console.log("\n✓ All files processed successfully!")}}catch(e){console.error("× Build failed:",e),process.exit(1)}}minifyJS().catch(e=>{console.error("× Unhandled error:",e),process.exit(1)});